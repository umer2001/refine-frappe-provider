import O from"axios";var p=class{url;instance;constructor(e){let{axiosConfig:t={},url:a}=e,{headers:o,...n}=t;this.url=a,this.instance=O.create({baseURL:a,headers:{Accept:"application/json","Content-Type":"application/json",...o},withCredentials:!0,...n}),this.instance.interceptors.response.use(s=>("message"in s.data?s.data=s.data.message:Object.keys(s.data).length===1&&"data"in s.data&&(s.data=s.data.data),s),s=>{let c={message:s.response?.data?.message||s.response?.statusText||s.response?.data?.exc_type,statusCode:s.response?.status};return Promise.reject(c)})}};var l=(i=>(i.read="read",i.write="write",i.submit="submit",i.cancel="cancel",i.report="report",i.create="create",i.delete="delete",i))(l||{});var g=r=>r in l;var C=r=>{let{action:e,params:t={},resource:a}=r,{id:o=""}=t;if(!a)throw new TypeError("Resource is required");if(!g(e))throw new TypeError("Invalid action");return{docname:o,doctype:a,perm_type:e}};var d=class extends p{provider(e={}){let{options:t}=e;return{can:this.can,options:t}}can=async e=>{try{let t=C(e),{data:{has_permission:a}}=await this.instance.request({method:"GET",params:t,url:"/api/method/frappe.client.has_permission"});return{can:!!a}}catch{return{can:!1}}}},u=d;var v=r=>{let{options:e={},...t}=r;return new u(t).provider({options:e})},_=v;var m=r=>{let{error:e,errorWhile:t}=r;return x(e)?e:t?new Error(`An unknown error occurred while ${t}.`):new Error("An unknown error occurred.")};import{HttpStatusCode as ie}from"axios";var x=r=>typeof r=="object"&&r!==null&&"message"in r&&"statusCode"in r;var f=class extends p{provider(){return{check:this.check,login:this.login,logout:this.logout,onError:this.onError}}login=async e=>{let{pwd:t,redirectTo:a="/",usr:o}=e;try{return await this.instance.request({data:{pwd:t,usr:o},method:"POST",url:"/api/method/login"}),{redirectTo:a,success:!0}}catch(n){return{error:m({error:n,errorWhile:"logging in"}),redirectTo:a,success:!1}}};logout=async e=>{let{redirectTo:t="/"}=e||{};try{return await this.instance.request({method:"POST",url:"/api/method/logout"}),{redirectTo:t,success:!0}}catch(a){return{error:m({error:a,errorWhile:"logging out"}),redirectTo:t,success:!1}}};check=async e=>{let{redirectTo:t="/"}=e||{};try{return typeof document<"u"&&typeof document.cookie=="string"&&(document.cookie===""||document.cookie.includes("user_id=Guest"))?{authenticated:!1,redirectTo:t}:(await this.instance.request({method:"GET",url:"/api/method/frappe.auth.get_logged_user"}),{authenticated:!0,redirectTo:t})}catch{return{authenticated:!1,redirectTo:t}}};onError=e=>{let t={error:m({error:e})};return Promise.resolve(t)}},P=f;var k=r=>new P(r).provider(),F=k;var b={between:"between",contains:"like",eq:"=",gt:">",gte:">=",in:"in",lt:"<",lte:"<=",ncontains:"not like",ne:"!=",nin:"not in"},B={and:null,containss:null,endswith:null,endswiths:null,nbetween:null,ncontainss:null,nendswith:null,nendswiths:null,nnull:null,nstartswith:null,nstartswiths:null,null:null,or:null,startswith:null,startswiths:null},G={...b,...B},U=r=>{let e=G[r];if(e)return e;throw new Error(`[refine-frappe]: \`operator: ${r}\` is not supported.`)},L=r=>{if(!("field"in r))throw new Error("[refine-frappe]: `filter` must be a logical filter.");let{field:e,operator:t,value:a}=r,o=U(t);return[e,o,a]},T=r=>{if(!r)return[];let e=[];return r.forEach(t=>{e.push(L(t))}),e};var w=(r={})=>{let{current:a=1,pageSize:o=10}=r;return{limit_page_length:o,limit_page_start:(a-1)*o}};var R=r=>r&&r.length>0?r.map(t=>`${t.field} ${t.order}`).join(","):void 0;var h=class extends p{provider(){return{create:this.create,custom:this.custom,deleteOne:this.deleteOne,getApiUrl:this.getApiUrl,getList:this.getList,getMany:this.getMany,getOne:this.getOne,update:this.update}}getList=async e=>{let{filters:t,meta:a,pagination:o,resource:n,sorters:s}=e,i=T(t),c=w(o),D=R(s),{data:A}=await this.instance.request({method:"GET",params:{fields:JSON.stringify(a?.fields||["name"]),filters:JSON.stringify(i),limit:c.limit_page_length,limit_start:c.limit_page_start,order_by:D},url:`/api/resource/${n}`}),{data:E}=await this.instance.request({method:"GET",params:{filters:JSON.stringify(i)},url:`/api/v2/doctype/${n}/count`});return{data:A,total:E}};getMany=async e=>{let{ids:t,meta:a,resource:o}=e,{data:n}=await this.instance.request({method:"GET",params:{fields:JSON.stringify(a?.fields||["name"]),filters:JSON.stringify([["name","in",t]])},url:`/api/resource/${o}`});return{data:n}};create=async e=>{let{resource:t,variables:a}=e,{data:o}=await this.instance.request({data:a,method:"POST",url:`/api/resource/${t}`});return{data:o}};update=async e=>{let{id:t,resource:a,variables:o}=e,{data:n}=await this.instance.request({data:o,method:"PUT",url:`/api/resource/${a}/${t}`});return{data:n}};getOne=async e=>{let{id:t,resource:a}=e,{data:o}=await this.instance.request({method:"GET",url:`/api/resource/${a}/${t}`});return{data:o}};deleteOne=async e=>{let{id:t,resource:a}=e;return await this.instance.request({method:"DELETE",url:`/api/resource/${a}/${t}`}),{data:{id:t}}};custom=async e=>{let{method:t,payload:a,url:o}=e,{data:n}=await this.instance.request({data:a,method:t,url:o});return{data:n}};getApiUrl=()=>this.url},y=h;var S=r=>new y(r).provider(),q=S;export{u as AccessControlClient,P as AuthClient,p as Client,y as DataClient,_ as accessControlProvider,F as authProvider,q as dataProvider};
//# sourceMappingURL=index.js.map